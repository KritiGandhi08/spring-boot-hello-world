name: CI/CD Pipeline

on: 
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Docker image
        run: |
          docker build -t kritigandhi/spring-boot-hello-world:latest .
          docker login -u kritigandhi -p ${{ secrets.DOCKERHUB_TOKEN }}  # Use token instead of password
          docker push kritigandhi/spring-boot-hello-world:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster spring \
            --service springservice \
            --task-definition springtaskdefinition
      - name: Send notification
        uses: actions/notify@v3
        with:
          name: CI-CD Pipeline
          title: ${{ job.status }} - ${{ github.sha }}
          body: ${{ job.details }}
          on: [success, failure]
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

